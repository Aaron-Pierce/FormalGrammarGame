{"mappings":"AAcA,kCAIE,qBAAsB,CAFtB,wBAA0B,CAD1B,oCAAqC,CAErC,sCAEF,CCXA,4CDaE,6CCXF,CDaA,wCCXE,gCAAoC,CDapC,cCXF,CCUA,oCAKE,0BAA2B,CAF3B,qBAAsB,CAFtB,yCAA2C,CAC3C,eAAgB,CAId,wBAAyB,CACxB,uBAAwB,CACtB,qBAAsB,CACrB,oBAAqB,CACjB,gBAEZ","sources":["src/components/StringSymbol.vue","%3Cinput%20css%20vm7uMV%3E","src/components/Level.vue"],"sourcesContent":["<template>\n  <span\n    :class=\"{\n      nonterminalSymbol: object.kind == 'Nonterminal',\n      activated:\n        (productions[activeIndex] || [])[0] == this.character,\n    }\"\n    @click=\"activate\"\n  >\n    {{ object.character }}\n  </span>\n</template>\n\n<style scoped>\n.nonterminalSymbol {\n  transition-property: background-color;\n  transition-duration: 0.15s;\n  transition-timing-function: ease-in-out;\n  box-sizing: border-box;\n}\n\n.nonterminalSymbol.activated {\n  background-color: rgb(0, 255, 50, 0.25) !important;\n}\n\n.nonterminalSymbol:hover {\n  background-color: rgb(0, 0, 50, 0.1);\n  cursor: pointer;\n}\n</style>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport { SentinelForm } from \"./types\";\n\nexport default defineComponent({\n  // type inference enabled\n\n  props: {\n    index: Number,\n    activeIndex: Number,\n    productions: Array,\n  },\n\n  data() {\n    let parentData = this.$parent?.$data as SentinelForm;\n    console.log(parentData);\n\n    return {\n      object: parentData.list[this.index || 0],\n      isActive: parentData.activeIndex == this.index,\n    };\n  },\n\n  // emits: [\"activated\"],\n\n  methods: {\n    activate() {\n      console.log(\"Ran click event\");\n      console.log(\"This shit is ridiculous\");\n\n      if (this.object.kind == \"Nonterminal\") {\n        console.log(\"Ran something\");\n        this.$emit(\"activated\", 4);\n      }\n    },\n  },\n});\n</script>","\n\n.nonterminalSymbol[data-v-4d1dce] {\n  transition-property: background-color;\n  transition-duration: 0.15s;\n  transition-timing-function: ease-in-out;\n  box-sizing: border-box;\n}\n.nonterminalSymbol.activated[data-v-4d1dce] {\n  background-color: rgb(0, 255, 50, 0.25) !important;\n}\n.nonterminalSymbol[data-v-4d1dce]:hover {\n  background-color: rgb(0, 0, 50, 0.1);\n  cursor: pointer;\n}\n\n\n#targetStringWrapper[data-v-ace1a5] {\n  font-family: \"Computer Modern Serif\", serif;\n  font-size: 2.5em;\n  box-sizing: border-box;\n\n  -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n     -khtml-user-select: none; /* Konqueror HTML */\n       -moz-user-select: none; /* Old versions of Firefox */\n        -ms-user-select: none; /* Internet Explorer/Edge */\n            user-select: none; /* Non-prefixed version, currently\n                                  supported by Chrome, Edge, Opera and Firefox */\n}\n\n/*# sourceMappingURL=index.ebe2dc16.css.map */\n","<template>\n<div id=\"levelWrapper\">\n  <div id=\"targetStringWrapper\">\n    <p id=\"targetString\">\n      <string-symbol\n        v-for=\"(symbol, index) in list\"\n        :index=\"index\"\n        :key=\"symbol.character+index\"\n        v-model:activeIndex=\"activeIndex\"\n        v-model:productions=\"productions\"\n        @activated=\"activate\"\n      ></string-symbol>\n    </p>\n  </div>\n\n  <div id=\"buttonWrapper\">\n      <button v-for=\"(rule, index) in productions\" :key=\"index\" class=\"productionButton\" @click=\"apply(index)\">\n        {{rule[0] + \" -> \" + rule[1].reduce((str, el) => str + el.character, \"\")}}\n      </button>\n  </div>\n  </div>\n</template>\n\n<style scoped>\n#targetStringWrapper {\n  font-family: \"Computer Modern Serif\", serif;\n  font-size: 2.5em;\n  box-sizing: border-box;\n\n  -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n     -khtml-user-select: none; /* Konqueror HTML */\n       -moz-user-select: none; /* Old versions of Firefox */\n        -ms-user-select: none; /* Internet Explorer/Edge */\n            user-select: none; /* Non-prefixed version, currently\n                                  supported by Chrome, Edge, Opera and Firefox */\n}\n</style>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport StringSymbol from \"./StringSymbol.vue\";\nimport {\n  formatProductionStrings,\n  NonterminalSymbolObject,\n  SentinelForm,\n  stringToSymbols,\n  TerminalSymbolObject,\n} from \"./types\";\n\nexport default defineComponent({\n  // type inference enabled\n\n  props: [\"startstring\", \"productionstrings\", \"somethingelse\"],\n\n  data() {\n      console.log(this.startstring, this.productionstrings, this.somethingelse)\n    return {\n      list: stringToSymbols(this.startstring),\n      activeIndex: null,\n      productions: formatProductionStrings(this.productionstrings),\n    } as SentinelForm;\n  },\n  methods: {\n    activate(index: number) {\n      console.log(\"where did you get this from\");\n      console.log(\"Wtf?\")\n      console.log(\"Setting active index \", index);\n      if(this.activeIndex == index){\n        //toggle if already active\n        this.activeIndex = null;\n      }else{\n        this.activeIndex = index;\n      }\n    },\n\n    apply(index: number){\n      console.log(\"Applying production \", index, \"to\", this.activeIndex);\n\n      if(this.activeIndex != null){\n        let symbol = this.list[this.activeIndex];\n        if(symbol.character == this.productions[index][0]){\n          //remove the symbol\n          this.list.splice(this.activeIndex, 1);\n          let symbolsToInsert = this.productions[index][1];\n          for(let i = 0; i < symbolsToInsert.length; i++){\n            this.list.splice(this.activeIndex + i, 0, symbolsToInsert[i]);\n          }\n\n          console.log(\"After, list is: \", this.list)\n          this.activeIndex = null;\n        }\n      }\n    }\n  },\n  components: {\n    StringSymbol,\n  },\n});\n</script>"],"names":[],"version":3,"file":"index.ebe2dc16.css.map"}