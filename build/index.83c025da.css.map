{"mappings":"AAAA,UASA,kBAAA,CAFA,YAAA,CACA,qBAAA,CAGA,yCAAA,CARA,WAAA,CAOA,sBAAA,CANA,QAAA,CACA,SAAA,CAHA,UAUA,CCEA,kCAIE,qBAAsB,CAFtB,wBAA0B,CAD1B,oCAAqC,CAErC,sCAEF,CCEA,4CDAE,6CAA2B,CAC3B,cCEF,CCuCA,sCAME,0BAA2B,CAH3B,qBAAsB,CAFtB,yCAA2C,CAC3C,eAAgB,CAEhB,iBAAkB,CAGlB,wBAAyB,CACzB,uBAAwB,CACxB,qBAAsB,CACtB,oBAAqB,CACrB,gBAEF,CD/BA,wBCiCE,YAAO,CACP,kBAAa,CACb,4BAAmB,CACnB,cD/BF,CCiCA,+BD/BE,cCiCF,CD/BA,6BCiCA,oBD/BA,CCiCA,8BAEA,YAAA,CD/BE,kBAAmB,CCiCnB,sBAAa,CAHb,UD5BF,CACA,0BCiCE,YAAa,CACb,qBAAsB,CACxB,cD/BA,CCiCA,kCACE,iCAAa,CACb,4CD/BF,CCiCA,sBAIE,4BAA6B,CD9B7B,qBAAuB,CCiCvB,iBAAK,CDtCL,yCAA2C,CCiC3C,gBAAgB,CAGlB,WAAA,CAIE,2CD/BF,CACA,4BCkCE,kCAAuB,CADvB,cD9BF,CACA,0BCkCA,iCAAA,CADE,4CD9BF,CCiCA,uBACE,iCAAe,CACf,4CACF,CD/BA,6BCmCE,kBAAmB,CADnB,iBAAkB,CADlB,UAGF,CCtGA,mCACE,UACF,CF0EA,gCEpEE,cAAY,CAJZ,YAAa,CAEb,yCAAuC,CADvC,sCAAa,CAEb,WF2EF,CExEA,4BF0EE,qBAAuB,CExEvB,iBAAW,CACX,iBAAkB,CAClB,4CF0EF,CACA,kCExEA,mBAAA,CF0EE,gBAAkB,CExElB,gBF0EF,CACA,+BExEE,YACF,CF0EA,kCEvEE,iCAAa,CADb,cAEF,CF0EA,0BExEE,iCF0EF,CACA,uCExEA,gCAEI,iCAAO,CFwEP,uBAEJ,CExEA,CClDA,oBAKE,kBAAmB,CAFnB,YAAa,CACb,qBAAsB,CAGtB,yCAA2C,CAL3C,YAAa,CAIb,sBAAuB,CALvB,WAOF,CH+HA,0BACE,eG7HF,CH+HA,yBAEE,UAAW,CG7HX,aAAQ,CAFV,SHiIA,CACA,4BAGE,kBAAmB,CGhInB,YAAa,CACf,qBAAA,CAEE,sBH+HF,CACA,uCACA,oBG7HI,UACJ,CH+HA","sources":["src/index.css","src/components/StringSymbol.vue","%3Cinput%20css%20kDTuu-%3E","src/components/Level.vue","src/components/LevelSelect.vue","src/App.vue"],"sourcesContent":["body,\r\nhtml {\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-family: \"Computer Modern Serif\", serif;\r\n}\r\n","<template>\r\n  <span\r\n    :class=\"{\r\n      nonterminalSymbol: object.kind == 'Nonterminal',\r\n      activated:\r\n        (productions[activeProductionIndex] || [])[0] == object.character,\r\n    }\"\r\n    @click=\"activate\"\r\n  >\r\n    {{ object.character }}\r\n  </span>\r\n</template>\r\n\r\n<style scoped>\r\n.nonterminalSymbol {\r\n  transition-property: background-color;\r\n  transition-duration: 0.15s;\r\n  transition-timing-function: ease-in-out;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.nonterminalSymbol.activated {\r\n  background-color: rgb(0, 255, 50, 0.25) !important;\r\n  cursor: pointer;\r\n}\r\n\r\n.nonterminalSymbol:hover {\r\n  /* background-color: rgb(0, 0, 50, 0.1); */\r\n  /* cursor: pointer; */\r\n}\r\n</style>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from \"vue\";\r\nimport { SentinelForm } from \"./types\";\r\n\r\nexport default defineComponent({\r\n  // type inference enabled\r\n\r\n  props: {\r\n    index: Number,\r\n    activeProductionIndex: Number,\r\n    productions: Array,\r\n  },\r\n\r\n  data() {\r\n    let parentData = this.$parent?.$data as SentinelForm;\r\n    console.log(parentData);\r\n\r\n    return {\r\n      object: parentData.list[this.index || 0],\r\n      isActive: parentData.activeProductionIndex == this.index,\r\n    };\r\n  },\r\n\r\n  emits: [\"applyProduction\"],\r\n\r\n  methods: {\r\n    activate() {\r\n      console.log(\"Ran click event\");\r\n      this.$emit(\"applyProduction\", this.index);\r\n    },\r\n  },\r\n});\r\n</script>","body,\r\nhtml {\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-family: \"Computer Modern Serif\", serif;\r\n}\r\n\n\n.nonterminalSymbol[data-v-ea750e] {\r\n  transition-property: background-color;\r\n  transition-duration: 0.15s;\r\n  transition-timing-function: ease-in-out;\r\n  box-sizing: border-box;\n}\n.nonterminalSymbol.activated[data-v-ea750e] {\r\n  background-color: rgb(0, 255, 50, 0.25) !important;\r\n  cursor: pointer;\n}\n.nonterminalSymbol[data-v-ea750e]:hover {\r\n  /* background-color: rgb(0, 0, 50, 0.1); */\r\n  /* cursor: pointer; */\n}\r\n\n\n#buildingStringWrapper[data-v-8db761] {\r\n  font-family: \"Computer Modern Serif\", serif;\r\n  font-size: 2.5em;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n\r\n  -webkit-touch-callout: none; /* iOS Safari */\r\n  -webkit-user-select: none; /* Safari */\r\n  -khtml-user-select: none; /* Konqueror HTML */\r\n  -moz-user-select: none; /* Old versions of Firefox */\r\n  -ms-user-select: none; /* Internet Explorer/Edge */\r\n  user-select: none; /* Non-prefixed version, currently\r\n                                  supported by Chrome, Edge, Opera and Firefox */\n}\n#linkRow[data-v-8db761] {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  margin-top: 2em;\n}\n#linkRowDivider[data-v-8db761]{\r\n  margin-top: 2em;\n}\n.buttonShield[data-v-8db761] {\r\n  display: inline-block;\n}\n#buttonWrapper[data-v-8db761] {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\n}\n.buttonRow[data-v-8db761] {\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 1rem;\n}\n.dangerHover[data-v-8db761]:hover{\r\n  background-color: rgba(255, 0, 0, 0.2);\r\n  transition: background-color 0.15s ease-in-out;\n}\nbutton[data-v-8db761] {\r\n  font-family: \"Computer Modern Serif\", serif;\r\n  font-size: 1.5rem;\r\n\r\n  background-color: transparent;\r\n  margin: 0.2em;\r\n  border: 1px solid black;\r\n  border-radius: 3px;\r\n\r\n  transition: background-color 0.2s ease-in-out;\n}\nbutton[data-v-8db761]:hover {\r\n  cursor: pointer;\r\n  background-color: rgba(100, 100, 100, 0.1);\n}\n.completed[data-v-8db761] {\r\n  transition: background-color 0.75s ease-in-out;\r\n  background-color: rgba(0, 255, 0, 0.2);\n}\n.failed[data-v-8db761] {\r\n  background-color: rgba(255, 0, 0, 0.2);\r\n  transition: background-color 0.75s ease-in-out;\n}\n#levelWrapper[data-v-8db761] {\r\n  width: 100%;\r\n  text-align: center;\r\n  padding-bottom: 2em;\n}\r\n\n\n#levelSelectWrapper[data-v-454c95] {\r\n  width: 100%;\n}\n#levelSelectGrid[data-v-454c95] {\r\n  display: grid;\r\n  grid-template-rows: 1fr 1fr 1fr 1fr 1fr;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\r\n  row-gap: 1em;\r\n  column-gap: 1em;\n}\n.levelButton[data-v-454c95] {\r\n  border: 2px solid black;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  transition: background-color 0.15s ease-in-out;\n}\n.levelButton .name[data-v-454c95] {\r\n  margin-bottom: 0.25em;\r\n  margin-top: 0.25em;\r\n  padding-bottom: 0;\n}\n.levelButton hr[data-v-454c95] {\r\n  margin-top: 0;\n}\n.levelButton[data-v-454c95]:hover {\r\n  cursor: pointer;\r\n  background-color: rgba(0, 255, 0, 0.2);\n}\n.completed[data-v-454c95] {\r\n  background-color: rgba(0, 255, 0, 0.2);\n}\n@media only screen and (max-width: 7in) {\n#levelSelectGrid[data-v-454c95] {\r\n    grid-template-rows: auto;\r\n    grid-template-columns: 1fr 1fr 1fr;\n}\n}\r\n\n\nmain[data-v-3efe13] {\r\n  width: 7.5in;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-family: \"Computer Modern Serif\", serif;\n}\n#header > h1[data-v-3efe13]{\r\n  margin-bottom: 0;\n}\n#gameArea[data-v-3efe13] {\r\n  width: 80%;\r\n  height: 95%;\r\n  margin-top: 5%;\n}\n#gameWrapper[data-v-3efe13] {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\n}\n@media only screen and (max-width: 7in) {\nmain[data-v-3efe13]{\r\n    width: 90vw;\n}\n}\r\n\n/*# sourceMappingURL=index.83c025da.css.map */\n","<template>\r\n  <div id=\"levelWrapper\" :class=\"{ completed: completed, failed: failed }\">\r\n    <div id=\"buildingStringWrapper\">\r\n      <p id=\"buildingString\">\r\n        <string-symbol\r\n          v-for=\"(symbol, index) in list\"\r\n          :index=\"index\"\r\n          :key=\"symbol.character + index\"\r\n          v-model:activeProductionIndex=\"activeProductionIndex\"\r\n          v-model:productions=\"productions\"\r\n          @applyProduction=\"applyProduction\"\r\n        ></string-symbol>\r\n      </p>\r\n    </div>\r\n    <button\r\n      id=\"returnToLevelSelect\"\r\n      v-if=\"completed\"\r\n      @click=\"returnToLevelSelect\"\r\n    >\r\n      Return to Level Select\r\n    </button>\r\n    <button id=\"restart\" v-if=\"failed\" @click=\"restart\">Restart</button>\r\n    <div id=\"targetStringWrapper\">\r\n      <p>\r\n        Construct: <span id=\"targetString\">{{ targetstring }}</span>\r\n      </p>\r\n    </div>\r\n    <!-- <div id=\"buttonWrapper\" :style=\"{'grid-template-columns': 'repeat(1fr, ' + new Set(productions.map(e => e[0])).size + ')'}\"> -->\r\n    <div\r\n      id=\"buttonWrapper\"\r\n      :style=\"{ 'grid-template-columns': 'repeat(1fr, 3)' }\"\r\n    >\r\n      <div\r\n        class=\"buttonRow\"\r\n        v-for=\"char in new Set(productions.map((e) => e[0]))\"\r\n        :key=\"char\"\r\n      >\r\n        <span v-for=\"(rule, index) in productions\" :key=\"rule[0] + index\">\r\n          <button\r\n            v-if=\"rule[0] === char\"\r\n            class=\"productionButton\"\r\n            @click=\"activateProduction(index)\"\r\n          >\r\n            {{\r\n              rule[0] +\r\n              \" ⟶ \" +\r\n              (rule[1].length === 0\r\n                ? \"λ\"\r\n                : rule[1].reduce((str, el) => str + el.character, \"\"))\r\n            }}\r\n          </button>\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <hr id=\"linkRowDivider\" />\r\n    <div id=\"linkRow\">\r\n      <button @click=\"returnToLevelSelect\" class=\"dangerHover\">Return To Level Select</button>\r\n      <button @click=\"promptRestart\" class=\"dangerHover\">Restart</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n#buildingStringWrapper {\r\n  font-family: \"Computer Modern Serif\", serif;\r\n  font-size: 2.5em;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n\r\n  -webkit-touch-callout: none; /* iOS Safari */\r\n  -webkit-user-select: none; /* Safari */\r\n  -khtml-user-select: none; /* Konqueror HTML */\r\n  -moz-user-select: none; /* Old versions of Firefox */\r\n  -ms-user-select: none; /* Internet Explorer/Edge */\r\n  user-select: none; /* Non-prefixed version, currently\r\n                                  supported by Chrome, Edge, Opera and Firefox */\r\n}\r\n\r\n#linkRow {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  margin-top: 2em;\r\n}\r\n\r\n#linkRowDivider{\r\n  margin-top: 2em;\r\n}\r\n\r\n.buttonShield {\r\n  display: inline-block;\r\n}\r\n\r\n#buttonWrapper {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n}\r\n\r\n.buttonRow {\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 1rem;\r\n}\r\n\r\n.dangerHover:hover{\r\n  background-color: rgba(255, 0, 0, 0.2);\r\n  transition: background-color 0.15s ease-in-out;\r\n}\r\n\r\nbutton {\r\n  font-family: \"Computer Modern Serif\", serif;\r\n  font-size: 1.5rem;\r\n\r\n  background-color: transparent;\r\n  margin: 0.2em;\r\n  border: 1px solid black;\r\n  border-radius: 3px;\r\n\r\n  transition: background-color 0.2s ease-in-out;\r\n}\r\n\r\nbutton:hover {\r\n  cursor: pointer;\r\n  background-color: rgba(100, 100, 100, 0.1);\r\n}\r\n\r\n.completed {\r\n  transition: background-color 0.75s ease-in-out;\r\n  background-color: rgba(0, 255, 0, 0.2);\r\n}\r\n\r\n.failed {\r\n  background-color: rgba(255, 0, 0, 0.2);\r\n  transition: background-color 0.75s ease-in-out;\r\n}\r\n\r\n#levelWrapper {\r\n  width: 100%;\r\n  text-align: center;\r\n  padding-bottom: 2em;\r\n}\r\n</style>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from \"vue\";\r\nimport StringSymbol from \"./StringSymbol.vue\";\r\nimport {\r\n  formatProductionStrings,\r\n  NonterminalSymbolObject,\r\n  SentinelForm,\r\n  stringToSymbols,\r\n  TerminalSymbolObject,\r\n} from \"./types\";\r\n\r\nexport default defineComponent({\r\n  // type inference enabled\r\n\r\n  props: [\"startstring\", \"productionstrings\", \"targetstring\", \"levelIndex\"],\r\n  emits: [\"completed\", \"restart\"],\r\n\r\n  data() {\r\n    console.log(this.startstring, this.productionstrings, this.targetstring);\r\n    console.log(\"Mounted\");\r\n\r\n    return {\r\n      list: stringToSymbols(this.startstring),\r\n      activeProductionIndex: null,\r\n      productions: formatProductionStrings(this.productionstrings),\r\n      completed: false,\r\n      failed: false,\r\n    } as SentinelForm;\r\n  },\r\n  methods: {\r\n    applyProduction(index: number) {\r\n      if (this.activeProductionIndex != null) {\r\n        let production = this.productions[this.activeProductionIndex];\r\n        let symbol = this.list[index];\r\n        if (symbol.character == production[0]) {\r\n          //remove the symbol\r\n          this.list.splice(index, 1);\r\n          let symbolsToInsert = this.productions[this.activeProductionIndex][1];\r\n          for (let i = 0; i < symbolsToInsert.length; i++) {\r\n            this.list.splice(index + i, 0, symbolsToInsert[i]);\r\n          }\r\n\r\n          console.log(\"After, list is: \", this.list);\r\n\r\n          let newString = this.list.reduce(\r\n            (str, charObj) => str + charObj.character,\r\n            \"\"\r\n          );\r\n          if (newString == this.targetstring) {\r\n            console.log(\"Constructed string successfully\");\r\n            this.completed = true;\r\n\r\n            let parsedJson = JSON.parse(\r\n              localStorage.getItem(\"completedLevels\") || \"{}\"\r\n            );\r\n            parsedJson[this.levelIndex] = true;\r\n            localStorage.setItem(\"completedLevels\", JSON.stringify(parsedJson));\r\n\r\n          } else {\r\n            let numberOfNonTerminals = this.list.reduce(\r\n              (acc, el) => acc + (el.kind === \"Nonterminal\" ? 1 : 0),\r\n              0\r\n            );\r\n            if (numberOfNonTerminals === 0) {\r\n              this.failed = true;\r\n            }\r\n          }\r\n          this.activeProductionIndex = null;\r\n        }\r\n      }\r\n    },\r\n\r\n    activateProduction(index: number) {\r\n      console.log(\"Activating production \", index);\r\n\r\n      this.activeProductionIndex = index;\r\n    },\r\n\r\n    returnToLevelSelect() {\r\n      this.$emit(\"completed\");\r\n    },\r\n\r\n    restart() {\r\n      this.$emit(\"restart\");\r\n    },\r\n\r\n    promptRestart(){\r\n      let confirmation = confirm(\"Confirm restart?\");\r\n\r\n      if(confirmation){\r\n        this.$emit(\"restart\");\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n    StringSymbol,\r\n  },\r\n});\r\n</script>","<template>\r\n  <div id=\"levelSelectWrapper\">\r\n    <div v-if=\"currentLevelIndex === null\" id=\"levelSelectGrid\">\r\n      <div\r\n        class=\"levelButton\"\r\n        v-for=\"(level, index) in Levels\"\r\n        :key=\"index\"\r\n        @click=\"loadLevel(index)\"\r\n        :class=\"{ completed: isComplete(index) }\"\r\n      >\r\n        <h1>{{ index }}</h1>\r\n      </div>\r\n    </div>\r\n\r\n    <level\r\n      :key=\"currentLevelIndex\"\r\n      v-if=\"currentLevelIndex !== null\"\r\n      :startstring=\"Levels[currentLevelIndex].startString\"\r\n      :targetstring=\"Levels[currentLevelIndex].targetString\"\r\n      :productionstrings=\"Levels[currentLevelIndex].productionStrings\"\r\n      :levelIndex=\"currentLevelIndex\"\r\n      @completed=\"completedLevel\"\r\n      @restart=\"restartLevel\"\r\n    >\r\n    </level>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n#levelSelectWrapper {\r\n  width: 100%;\r\n}\r\n\r\n#levelSelectGrid {\r\n  display: grid;\r\n  grid-template-rows: 1fr 1fr 1fr 1fr 1fr;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\r\n  row-gap: 1em;\r\n  column-gap: 1em;\r\n}\r\n\r\n.levelButton {\r\n  border: 2px solid black;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  transition: background-color 0.15s ease-in-out;\r\n}\r\n\r\n.levelButton .name {\r\n  margin-bottom: 0.25em;\r\n  margin-top: 0.25em;\r\n  padding-bottom: 0;\r\n}\r\n\r\n.levelButton hr {\r\n  margin-top: 0;\r\n}\r\n\r\n.levelButton:hover {\r\n  cursor: pointer;\r\n  background-color: rgba(0, 255, 0, 0.2);\r\n}\r\n\r\n.completed {\r\n  background-color: rgba(0, 255, 0, 0.2);\r\n}\r\n\r\n@media only screen and (max-width: 7in) {\r\n  #levelSelectGrid {\r\n    grid-template-rows: auto;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n  }\r\n}\r\n</style>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from \"vue\";\r\nimport { LevelObject, Levels } from \"./levels\";\r\nimport Level from \"./Level.vue\";\r\n\r\ntype LevelSelectData = {\r\n  Levels: LevelObject[];\r\n  currentLevelIndex: number | null;\r\n};\r\n\r\nexport default defineComponent({\r\n  // type inference enabled\r\n\r\n  data() {\r\n    return {\r\n      Levels: Levels,\r\n      currentLevelIndex: null,\r\n    } as LevelSelectData;\r\n  },\r\n\r\n  methods: {\r\n    loadLevel(index: number) {\r\n      console.log(\"loading\", index);\r\n      this.currentLevelIndex = index;\r\n      console.log(\"Selected level: \", this.Levels[this.currentLevelIndex]);\r\n    },\r\n    completedLevel() {\r\n      this.currentLevelIndex = null;\r\n    },\r\n    restartLevel() {\r\n      if (this.currentLevelIndex === null) return;\r\n      let oldValue = this.currentLevelIndex + 0;\r\n      this.currentLevelIndex = null;\r\n      requestAnimationFrame(() => {\r\n        this.currentLevelIndex = oldValue;\r\n      });\r\n    },\r\n    isComplete(index: number) {\r\n      return (\r\n        JSON.parse(localStorage.getItem(\"completedLevels\") || \"{}\")[index] ===\r\n        true\r\n      );\r\n    },\r\n  },\r\n\r\n  components: {\r\n    Level,\r\n  },\r\n});\r\n</script>","<template>\r\n  <main>\r\n    <div id=\"gameArea\">\r\n      <div id=\"header\">\r\n        <h1>The Formal Grammar Game</h1>\r\n        <hr>\r\n      </div>\r\n      <div id=\"gameWrapper\">\r\n        <level-select></level-select>\r\n      </div>\r\n    </div>\r\n  </main>\r\n</template>\r\n\r\n<style scoped>\r\nmain {\r\n  width: 7.5in;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-family: \"Computer Modern Serif\", serif;\r\n}\r\n\r\n\r\n#header > h1{\r\n  margin-bottom: 0;\r\n}\r\n\r\n#gameArea {\r\n  width: 80%;\r\n  height: 95%;\r\n  margin-top: 5%;\r\n}\r\n\r\n#gameWrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n@media only screen and (max-width: 7in) {\r\n  main{\r\n    width: 90vw;\r\n  }\r\n}\r\n</style>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from \"vue\";\r\nimport Level from \"./components/Level.vue\";\r\nimport LevelSelect from \"./components/LevelSelect.vue\";\r\n\r\nexport default defineComponent({\r\n  // type inference enabled\r\n  data() {\r\n    return {};\r\n  },\r\n  components: {\r\n    Level,\r\n    LevelSelect\r\n  },\r\n});\r\n</script>"],"names":[],"version":3,"file":"index.83c025da.css.map"}